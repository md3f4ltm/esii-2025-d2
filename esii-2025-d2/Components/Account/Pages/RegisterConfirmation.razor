@page "/Account/RegisterConfirmation"

@using System.Text
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.WebUtilities
@using esii_2025_d2.Data

@inject UserManager<ApplicationUser> UserManager
@inject IEmailSender<ApplicationUser> EmailSender
@inject NavigationManager NavigationManager
@inject IdentityRedirectManager RedirectManager

<PageTitle>Registration Successful</PageTitle>

<h1>Registration Successful</h1>

<StatusMessage Message="@statusMessage" />

<div class="alert alert-success" role="alert">
    <h4 class="alert-heading">Welcome!</h4>
    <p>Your account has been successfully created and confirmed. You are now logged in.</p>
    <hr>
    <p class="mb-0">You will be redirected to the main page shortly...</p>
</div>

@code {
    private string? statusMessage;

    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    [SupplyParameterFromQuery]
    private string? Email { get; set; }

    [SupplyParameterFromQuery]
    private string? ReturnUrl { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (Email is null)
        {
            RedirectManager.RedirectTo("");
            return;
        }

        var user = await UserManager.FindByEmailAsync(Email);
        if (user is null)
        {
            HttpContext.Response.StatusCode = StatusCodes.Status404NotFound;
            statusMessage = "Error finding user for unspecified email";
            return;
        }

        // Since we auto-confirm emails now, just redirect to home after a brief delay
        await Task.Delay(2000); // 2 second delay to show the success message
        RedirectManager.RedirectTo(ReturnUrl ?? "/");
    }
}
