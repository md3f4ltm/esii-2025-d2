@using Microsoft.AspNetCore.Components.Authorization
@inject NavigationManager NavManager

<CascadingAuthenticationState>
    <Router AppAssembly="typeof(Program).Assembly">
        <Found Context="routeData">
            <AuthorizeRouteView RouteData="routeData" DefaultLayout="typeof(Layout.MainLayout)">
                <Authorizing>
                    <p>Checking authorization...</p>
                </Authorizing>
                <NotAuthorized>
                     @{
                         // Use the injected variable name 'NavManager'
                         var currentUri = NavManager.Uri;
                         var returnUrl = Uri.EscapeDataString(currentUri);
                         var loginLink = $"/login?returnUrl={returnUrl}";
                     }
                     <p role="alert">Sorry, you are not authorized to access this resource.</p>
                     <p>You might need to <a href="@loginLink">log in</a>.</p>
                </NotAuthorized>
            </AuthorizeRouteView>
            <FocusOnNavigate RouteData="routeData" Selector="h1" />
        </Found>
        <NotFound>
             <PageTitle>Not found</PageTitle>
             <LayoutView Layout="typeof(Layout.MainLayout)">
                 <p role="alert">Sorry, there's nothing at this address.</p>
             </LayoutView>
        </NotFound>
    </Router>
</CascadingAuthenticationState>
